{
  "main": "enhance-entry.js",
  "files": [
    "enhance-entry.js",
    "dist/enhance.wasm"
  ],
  "scripts": {
    "clean": "rm -r ./.build",
    "install:javy:old": "if [[ \"$OSTYPE\" == \"darwin\"* ]]; then npm run install:mac-javy; elif [[ \"$OSTYPE\" == \"linux\"* ]]; then npm run install:linux-javy; else echo 'Unsupported OS'; fi",
    "install:javy": "node -e \"const { execSync } = require('child_process'); const os = require('os'); const platform = os.platform(); if (platform.startsWith('darwin')) { execSync('npm run install:mac-javy', { stdio: 'inherit' }); } else if (platform.startsWith('linux')) { execSync('npm run install:linux-javy', { stdio: 'inherit' }); } else { console.error('Unsupported OS'); process.exit(1); }\"",
    "install:wasmtime:old": "if [[ \"$OSTYPE\" == \"darwin\"* ]]; then npm run install:mac-wasmtime; elif [[ \"$OSTYPE\" == \"linux\"* ]]; then npm run install:linux-wasmtime; else echo 'Unsupported OS'; fi",
    "install:wasmtime": "node -e \"const { execSync } = require('child_process'); const os = require('os'); const platform = os.platform(); if (platform.startsWith('darwin')) { execSync('npm run install:mac-wasmtime', { stdio: 'inherit' }); } else if (platform.startsWith('linux')) { execSync('npm run install:linux-wasmtime', { stdio: 'inherit' }); } else { console.error('Unsupported OS'); process.exit(1); }\"",
    "check-and-install": "test -f ./bin/javy || npm run install:javy && test -f ./bin/wasmtime || npm run install:wasmtime",
    "install:mac-javy": "mkdir -p ./bin && curl -L https://github.com/bytecodealliance/javy/releases/download/v1.4.0/javy-arm-macos-v1.4.0.gz | gzip -d > ./bin/javy && chmod u+x ./bin/javy",
    "install:mac-wasmtime": "mkdir -p ./bin && curl -L https://github.com/bytecodealliance/wasmtime/releases/download/v17.0.1/wasmtime-v17.0.1-aarch64-macos.tar.xz | tar -xJf - -C ./bin && cp ./bin/wasmtime-v17.0.1-aarch64-macos/wasmtime ./bin/wasmtime",
    "install:linux-javy": "mkdir -p ./bin && curl -L https://github.com/bytecodealliance/javy/releases/download/v1.4.0/javy-arm-linux-v1.4.0.gz | gzip -d > ./bin/javy && chmod u+x ./bin/javy",
    "install:linux-wasmtime": "mkdir -p ./bin && curl -L https://github.com/bytecodealliance/wasmtime/releases/download/v17.0.1/wasmtime-v17.0.1-aarch64-linux.tar.xz | tar -xJf - -C ./bin && cp ./bin/wasmtime-v17.0.1-aarch64-linux/wasmtime ./bin/wasmtime",
    "build:js": "mkdir -p ./.build && esbuild enhance-entry.js --bundle --outfile=./.build/enhance.js",
    "build:wasm": "mkdir -p ./.build && ls -lt ./bin && ./bin/javy help && ./bin/javy compile ./.build/enhance.js -o ./.build/enhance.wasm",
    "build": "npm run build:js && npm run build:wasm",
    "check-and-build": "test -f ./.build/enhance.wasm || npm run check-and-install && npm run build",
    "test": "npm run check-and-install && npm run check-and-build && cat ./test/input.json | ./bin/wasmtime ./.build/enhance.wasm"
  },
  "devDependencies": {
    "esbuild": "^0.19.11"
  },
  "dependencies": {
    "@enhance/ssr": "github:enhance-dev/enhance-ssr#wasm-compat",
    "@enhance/enhance-style-transform": "github:enhance-dev/enhance-style-transform#wasm-compat",
    "javy": "^0.1.2"
  }
}
